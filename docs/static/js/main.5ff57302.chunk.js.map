{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAiB9C,OACQ,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGKA,EAAKC,OAHV,uBAGXC,EAHW,EAGXA,KACFC,EAAMD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAChC,OACI,sBAAKc,UAAU,yDAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCAJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAW,WAEPxB,EAAQC,GAAUwB,MAAM,SAAAC,GACpBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKnB,CAACpB,IAGIqB,EDZyBK,CAAa1B,GAAhCa,EAJwB,EAI7BN,KAAaa,EAJgB,EAIhBA,QAQrB,OACI,qCACA,qBAAIJ,UAAU,oDAAd,UAAoEhB,EAApE,OAEEoB,GAAW,mBAAGJ,UAAU,mDAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAGQA,GAFGA,EAAIC,aExBzBgB,EAAgB,WAAI,MAEMzC,mBAAU,CAAC,cAFjB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAQ9B,OACE,qCACE,0DACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OAEpB,aADC,CACA,EAAD,CAA4BA,SAAaA,GAAxBA,YCjBrC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5ff57302.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Se llama setCategories del componente GifExpertApp\r\n//Se pasa setCategories como props desestructuradas (propiedades) \r\nexport const AddCategory = ( {setCategories} ) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        //console.log(e.target.value)\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const hanldeSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories(cats => [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n            <form onSubmit={ hanldeSubmit }>\r\n                <input\r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange= { handleInputChange  }/>\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=MWs039SAwPKPBlQ0IDD5J7LkLqXD7OqC`;\r\n    const resp = await fetch( url );\r\n    const { data } =  await resp.json();\r\n    const gifs =data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    //console.log(gifs)\r\n    // setImages(gifs);\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title,url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__fadeIn\">\r\n            <img src={ url } alt={ title }/> \r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import React, { useState, useEffect } from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    // const [count, setCount] = useState(0);\r\n    // const [images, setImages] = useState([])\r\n    const { data:images, loading} = useFetchGifs(category);\r\n    // useEffect(() => {\r\n    //     //se usa de esta forma por ser una promesa\r\n    //     getGifs(category).then(imgs => setImages(imgs));\r\n    // },[ category ]) // se envia si la categoria cambia para ejecutar el efecto\r\n\r\n    \r\n    \r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__bounce animate__fadeIn'>{ category } </h3>\r\n\r\n        { loading && <p className='animate__animated animate__bounce animate__flash'>Loading</p> }\r\n        \r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key = {img.id}\r\n                            //uso del operado spread ---> ...\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs}  from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category).then( imgs => { \r\n            setState({\r\n                data: imgs,    \r\n                loading: false    \r\n            });        \r\n            \r\n    });\r\n\r\n    },[category]);\r\n\r\n    \r\n    return state; // el state es data:[], loading: true\r\n}\r\n","import {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport  const GifExpertApp =  ()=>{\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball Z'];\r\n    const [categories, setCategories] = useState (['One Piece']);\r\n\r\n    // const handleAdd = (e) =>{\r\n    //     //setCategories([...categories, 'One Punch']);\r\n    //     setCategories(cats => [...categories, 'One Punch']);\r\n    // }\r\n    return(\r\n      <>\r\n        <h2>Segundo Componente React</h2>\r\n        <AddCategory setCategories = { setCategories }/>\r\n        <hr/>\r\n       \r\n        <ol>\r\n           { \r\n                categories.map( category => (\r\n                     //<li key= {category}>{category}</li>\r\n                    <GifGrid key = { category } category = { category }/>\r\n                ))\r\n           }\r\n        </ol>\r\n      </>\r\n    );\r\n  };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}